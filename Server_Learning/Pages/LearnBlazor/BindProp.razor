@page "/learnBlazor/bindProp"

<div style="display: flex;justify-content: space-around">
    <div class="col-6 border p-2">
        <h3 class="text-primary">Product Summary</h3> <hr/>
        Name : @Product.Name <br/>
        Active : @Product.IsActive <br/>
        Price : @Product.Price <br/>
        This product is : @(Product.IsActive ? "IsActive" : "InActive") <br/>
        Property Selected : @selectedProp
        @if (!string.IsNullOrWhiteSpace(selectedProp))
        {
            <p style="padding-left:0 ">Property Value : @Product.ProductProps.FirstOrDefault(p => p.Key == selectedProp)?.Value </p>
        }
    </div>
    <br/>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3> <hr/>
        <div>
            Active: <input type="checkbox" @bind-checked=@Product.IsActive @bind-checked:event="oninput"/> <br/>
            Price : <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput"/> <br/>
            Product Properties :
            <select @bind="selectedProp">
                @foreach (var prop in Product.ProductProps)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>
    </div>
</div>

@code {
    private string selectedProp = "";


    Product Product = new Product()
    {
        Id = 1,
        Name = "Hat",
        IsActive = true,
        Price = 12.99,
        ProductProps = new List<ProductProp>()
        {
            new ProductProp { Id = 1, Key = "Color", Value = "Black" },
            new ProductProp { Id = 2, Key = "Flavor", Value = "Rose Jasmine" },
            new ProductProp { Id = 3, Key = "Size", Value = "20oz" }
        }
    };

}